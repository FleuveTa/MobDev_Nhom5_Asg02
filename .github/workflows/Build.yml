# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v4
        
  #     - name: Setup Java JDK
  #       uses: actions/setup-java@v4.2.1
  #       with:
  #         java-version: "17"
  #         distribution: "adopt"

  #     - name: Gradle Build Action
  #       uses: gradle/gradle-build-action@v3.3.2
        
  #     - name: Run tests
  #       run: ./gradlew test

  #     - name: Upload test report
  #       uses: actions/upload-artifact@v4.3.3
  #       with:
  #         name: unit_test_report
  #         path: app/build/reports/tests/testDebugUnitTest/

  # instrumentation-test:
  #   needs: [unit-test]
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v4

  #     - name: Setup Java JDK
  #       uses: actions/setup-java@v4.2.1
  #       with:
  #         java-version: "17"
  #         distribution: "adopt"

  #     - name: Run espresso tests
  #       uses: reactivecircus/android-emulator-runner@v2.30.1
  #       with:
  #         api-level: 31
  #         script: ./gradlew connectedCheck

  #     - name: Upload test report
  #       uses: actions/upload-artifact@v4.3.3
  #       with:
  #         name: instrumentation_test_report
  #         path: app/build/reports/androidTests/connected/
          
  # This workflow contains a single job called "build"
  build:
    # needs: [instrumentation-test]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Download and setup Android SDK
        uses: android-actions/setup-android@v3.2.1
        with:
          api-level: 30
          build-tools: 30.0.3
          target: default
          ndk: 21.3.6528147
      
      - name: Cache Gradle dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # - name: Build with Gradle
      #   run: ./gradlew build

      - name: Run Unit Tests
        run: ./gradlew test
        
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck
          
      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: HealthyPlan.apk
          path: app/build/outputs/apk/debug/app-debug.apk
